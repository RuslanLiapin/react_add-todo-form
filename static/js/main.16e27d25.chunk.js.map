{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","api/users.ts","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","todo","user","className","href","email","name","TodoInfo","id","completed","title","username","getUser","userId","usersFromServer","find","TodoList","todos","map","App","useState","newTodo","setNewTodo","fieldErrors","setFieldErrors","todosFromServer","setTodos","select","selectedUserId","setSelectedUserId","action","method","onSubmit","e","preventDefault","titleError","trim","selectError","nextId","items","maxId","forEach","item","findMaxId","newTodoItem","newTodos","type","placeholder","value","onChange","target","prevState","length","ReactDOM","render","document","getElementById"],"mappings":"mOAGaA,EAAqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChD,mCACGA,EAAKC,MACJ,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,EAAKC,KAAKG,OAAlD,SACGJ,EAAKC,KAAKI,UCENC,EAA4B,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAH,OACvC,0BACEE,UAAS,2BAAsBF,EAAKO,GAA3B,YAAiCP,EAAKQ,WAAa,uBAD9D,UAIE,oBAAIN,UAAU,kBAAd,SAAiCF,EAAKS,QACtC,cAAC,EAAD,CAAUT,KAAMA,MAHXA,EAAKO,KCZC,GACb,CACEA,GAAI,EACJF,KAAM,gBACNK,SAAU,OACVN,MAAO,qBAET,CACEG,GAAI,EACJF,KAAM,eACNK,SAAU,YACVN,MAAO,qBAET,CACEG,GAAI,EACJF,KAAM,mBACNK,SAAU,WACVN,MAAO,sBAET,CACEG,GAAI,EACJF,KAAM,mBACNK,SAAU,WACVN,MAAO,6BAET,CACEG,GAAI,EACJF,KAAM,mBACNK,SAAU,SACVN,MAAO,4BAET,CACEG,GAAI,EACJF,KAAM,uBACNK,SAAU,mBACVN,MAAO,2BAET,CACEG,GAAI,EACJF,KAAM,kBACNK,SAAU,eACVN,MAAO,0BAET,CACEG,GAAI,EACJF,KAAM,2BACNK,SAAU,gBACVN,MAAO,wBAET,CACEG,GAAI,EACJF,KAAM,kBACNK,SAAU,WACVN,MAAO,2BAET,CACEG,GAAI,GACJF,KAAM,qBACNK,SAAU,iBACVN,MAAO,2BCrDJ,SAASO,EAAQC,GAGtB,OAFkBC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKM,KAAOK,MAEvC,KAOf,IAAMG,EAAoC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC/C,yBAASd,UAAU,WAAnB,SACGc,EAAMC,KAAI,SAAAjB,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKO,UCnBvB,GACb,CACEA,GAAI,EACJE,MAAO,qBACPD,WAAW,EACXI,OAAQ,GAEV,CACEL,GAAI,GACJE,MAAO,kBACPD,WAAW,EACXI,OAAQ,GAEV,CACEL,GAAI,EACJE,MAAO,qCACPD,WAAW,EACXI,OAAQ,ICSL,IAAMM,EAAgB,WAC3B,MAA8BC,mBAAgB,CAC5CZ,GAAI,EACJE,MAAO,GACPD,WAAW,EACXI,OAAQ,IAJV,mBAAOQ,EAAP,KAAgBC,EAAhB,KAOA,EAAsCF,mBAAoC,IAA1E,mBAAOG,EAAP,KAAoBC,EAApB,KAEA,EAA0BJ,oBAAiB,kBAAMK,EAC9CP,KAAI,SAACjB,GAAD,mBAAC,eACDA,GADA,IAEHC,KAAMU,EAAQX,EAAKY,gBAHvB,mBAAOI,EAAP,KAAcS,EAAd,KAMA,EAA4CN,mBAAS,CACnDO,OAAQ,IADV,mBAAOC,EAAP,KAAuBC,EAAvB,KAuEA,OACE,sBAAK1B,UAAU,MAAf,UACE,+CAEA,uBAAM2B,OAAO,aAAaC,OAAO,OAAOC,SA7CY,SACtDC,GAEAA,EAAEC,iBACF,IAAMC,EAAsC,KAAzBd,EAAQX,MAAM0B,OAC7B,uBAAyB,GACvBC,EAAwC,IAA1BT,EAAeD,OAC/B,uBAAyB,GAM7B,GAJAH,EAAe,CACbd,MAAOyB,EACPR,OAAQU,IAES,KAAfF,GAAqC,KAAhBE,EAAoB,CAC3C,IACMC,EAhFZ,SAAmBC,GACjB,IAAIC,EAAQ,EAQZ,OANAD,EAAME,SAAQ,SAAAC,GACRA,EAAKlC,GAAKgC,IACZA,EAAQE,EAAKlC,OAIVgC,EAsEWG,CAAU1B,GACD,EACjB2B,EAAW,2BACZvB,GADY,IACHb,GAAI8B,EAAQzB,OAAQe,EAAeD,SAGjDL,EAAWsB,GAEX,IAAMC,EAAQ,sBAAO5B,GAAP,4BACT2B,GADS,IACI1C,KAAMU,EAAQgC,EAAY/B,YAG5Ca,EACEmB,GAEFvB,EAAW,CACTd,GAAI,EACJE,MAAO,GACPD,WAAW,EACXI,OAAQ,IAEVgB,EAAkB,CAChBF,OAAQ,MASV,UACE,sBAAKxB,UAAU,QAAf,UACE,uBACE2C,KAAK,OACL,UAAQ,aACRC,YAAY,uBACZC,MAAO3B,EAAQX,MACfuC,SAjEU,SAAChB,GACnB,IAAMvB,EAAQuB,EAAEiB,OAAOF,MAEvB1B,GAAW,SAAA6B,GAAS,kCACfA,GADe,IAElBzC,aAEFc,EAAe,2BACVD,GADS,IAEZb,MAA+B,IAAxBA,EAAM0B,OAAOgB,OAAe,uBAAyB,SA0DvD7B,EAAYb,OACR,sBAAMP,UAAU,QAAhB,SAAyBoB,EAAYb,WAG5C,sBAAKP,UAAU,QAAf,UACE,yBACE,UAAQ,aACRG,KAAK,SACL0C,MAAOpB,EAAeD,OACtBsB,SAzFa,SAAChB,GACtB,MAAwBA,EAAEiB,OAAlB5C,EAAR,EAAQA,KAAM0C,EAAd,EAAcA,MAEdnB,GAAkB,SAAAsB,GAAS,kCACtBA,GADsB,kBAExB7C,GAAQ0C,OAEXxB,EAAe,2BACVD,GADS,IAEZI,OAAkB,MAAVqB,EAAgB,uBAAyB,OA4E7C,UAME,wBAAQA,MAAM,IAAd,2BACA,mCACGlC,EAAgBI,KAAI,SAAChB,GAAD,OACnB,wBAEE8C,MAAO9C,EAAKM,GAFd,SAIGN,EAAKI,MAHDJ,EAAKM,YAQjBe,EAAYI,QACR,sBAAMxB,UAAU,QAAhB,SAAyBoB,EAAYI,YAG5C,wBACEmB,KAAK,SACL,UAAQ,eAFV,oBAOF,cAAC,EAAD,CAAU7B,MAAOA,QC7JvBoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.16e27d25.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\nexport const UserInfo: React.FC<{ todo: Todo }> = ({ todo }) => (\n  <>\n    {todo.user && (\n      <a className=\"UserInfo\" href={`mailto:${todo.user.email}`}>\n        {todo.user.name}\n      </a>\n    )}\n  </>\n);\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    className={`TodoInfo data-id=${todo.id} ${todo.completed && 'TodoInfo--completed'}`}\n    key={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    <UserInfo todo={todo} />\n  </article>\n\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport usersFromServer from '../../api/users';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\ntype TodoListProps = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { FormEventHandler, useState } from 'react';\nimport { TodoList, getUser } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport { Todo } from './types/Todo';\nimport todosFromServer from './api/todos';\n\nfunction findMaxId(items: Title[]) {\n  let maxId = 0;\n\n  items.forEach(item => {\n    if (item.id > maxId) {\n      maxId = item.id;\n    }\n  });\n\n  return maxId;\n}\n\ntype Title = {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n};\n\nexport const App: React.FC = () => {\n  const [newTodo, setNewTodo] = useState<Title>({\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  });\n\n  const [fieldErrors, setFieldErrors] = useState<{ [key: string]: string }>({});\n\n  const [todos, setTodos] = useState<Todo[]>(() => todosFromServer\n    .map((todo) => ({\n      ...todo,\n      user: getUser(todo.userId),\n    })));\n\n  const [selectedUserId, setSelectedUserId] = useState({\n    select: 0,\n  });\n\n  const handleSelected = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { name, value } = e.target;\n\n    setSelectedUserId(prevState => ({\n      ...prevState,\n      [name]: +value,\n    }));\n    setFieldErrors({\n      ...fieldErrors,\n      select: value === '0' ? 'Please choose a user' : '',\n    });\n  };\n\n  const handleTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const title = e.target.value;\n\n    setNewTodo(prevState => ({\n      ...prevState,\n      title,\n    }));\n    setFieldErrors({\n      ...fieldErrors,\n      title: title.trim().length === 0 ? 'Please enter a title' : '',\n    });\n  };\n\n  const handleSubmit: FormEventHandler<HTMLFormElement> = (\n    e: React.FormEvent<HTMLFormElement>,\n  ) => {\n    e.preventDefault();\n    const titleError = newTodo.title.trim() === ''\n      ? 'Please enter a title' : '';\n    const selectError = selectedUserId.select === 0\n      ? 'Please choose a user' : '';\n\n    setFieldErrors({\n      title: titleError,\n      select: selectError,\n    });\n    if (titleError === '' && selectError === '') {\n      const maxId = findMaxId(todos);\n      const nextId = maxId + 1;\n      const newTodoItem = {\n        ...newTodo, id: nextId, userId: selectedUserId.select,\n      };\n\n      setNewTodo(newTodoItem);\n\n      const newTodos = [...todos, {\n        ...newTodoItem, user: getUser(newTodoItem.userId),\n      }];\n\n      setTodos(\n        newTodos,\n      );\n      setNewTodo({\n        id: 0,\n        title: '',\n        completed: false,\n        userId: 0,\n      });\n      setSelectedUserId({\n        select: 0,\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Please enter a title\"\n            value={newTodo.title}\n            onChange={handleTitle}\n          />\n          {fieldErrors.title\n            && <span className=\"error\">{fieldErrors.title}</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            name=\"select\"\n            value={selectedUserId.select}\n            onChange={handleSelected}\n          >\n            <option value=\"0\">Choose a user</option>\n            <>\n              {usersFromServer.map((user) => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </>\n          </select>\n          {fieldErrors.select\n            && <span className=\"error\">{fieldErrors.select}</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}